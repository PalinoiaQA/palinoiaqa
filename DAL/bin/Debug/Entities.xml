<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Entities</name>
    </assembly>
    <members>
        <member name="T:Entities.viewProject">
            <summary>
            class to hold the code for the viewProject object
            </summary>
        </member>
        <member name="M:Entities.viewProject.#ctor(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewProject object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="datasource">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewProject.ID">
            <summary>
            class variable to store project ID
            </summary>
        </member>
        <member name="P:Entities.viewProject.Name">
            <summary>
            class variable to store project name
            </summary>
        </member>
        <member name="P:Entities.viewProject.DataSource">
            <summary>
            class variable to store project data source
            </summary>
        </member>
        <member name="P:Entities.viewProject.UpdatedBy">
            <summary>
            class variable to stored updatedby user id
            </summary>
        </member>
        <member name="P:Entities.viewProject.Active">
            <summary>
            class variable to stored Active data source
            </summary>
        </member>
        <member name="T:Entities.viewChapterType">
            <summary>
            class to hold viewChapterType info
            </summary>
        </member>
        <member name="M:Entities.viewChapterType.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewChapterType object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewChapterType.ID">
            <summary>
            class variable to store chapter type ID
            </summary>
        </member>
        <member name="P:Entities.viewChapterType.Text">
            <summary>
            class variable to store chapter type text
            </summary>
        </member>
        <member name="P:Entities.viewChapterType.Active">
            <summary>
            class variable to store chapter type active status
            </summary>
        </member>
        <member name="P:Entities.viewChapterType.UpdatedBy">
            <summary>
            class variable to store key to person updating chapter type
            </summary>
        </member>
        <member name="T:Entities.viewCSMResponseType">
            <summary>
            class to hold the code for the viewCSMResponseType object
            </summary>
        </member>
        <member name="M:Entities.viewCSMResponseType.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewCSMResponseType Object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewCSMResponseType.ID">
            <summary>
            class variable to store CSM response type ID
            </summary>
        </member>
        <member name="P:Entities.viewCSMResponseType.Text">
            <summary>
            class variable to store CSM response type text
            </summary>
        </member>
        <member name="P:Entities.viewCSMResponseType.Active">
            <summary>
            class variable to store CSM response type active status
            </summary>
        </member>
        <member name="P:Entities.viewCSMResponseType.UpdatedBy">
            <summary>
            class variable to store key to person updating CSM response type 
            </summary>
        </member>
        <member name="T:Entities.ImageInfo">
            <summary>
            class to hold ImageInfo information
            </summary>
        </member>
        <member name="M:Entities.ImageInfo.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            constructor with four parameters
            </summary>
            <param name="id">int</param>
            <param name="width">int</param>
            <param name="height">int</param>
            <param name="fileName">string</param>
        </member>
        <member name="P:Entities.ImageInfo.ID">
            <summary>
            class variable to store image ID
            </summary>
        </member>
        <member name="P:Entities.ImageInfo.Width">
            <summary>
            class variable to store image width
            </summary>
        </member>
        <member name="P:Entities.ImageInfo.Height">
            <summary>
            class variable to store image height
            </summary>
        </member>
        <member name="P:Entities.ImageInfo.FileName">
            <summary>
            class variable to store image fuilename
            </summary>
        </member>
        <member name="T:Entities.viewCSMType">
            <summary>
            class to hold code for viewCSMType object
            </summary>
        </member>
        <member name="M:Entities.viewCSMType.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewCSMType object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewCSMType.ID">
            <summary>
            class variable to store CSM type ID
            </summary>
        </member>
        <member name="P:Entities.viewCSMType.Text">
            <summary>
            class variable to store CSM type text
            </summary>
        </member>
        <member name="P:Entities.viewCSMType.Active">
            <summary>
            class variable to store CSM type active status
            </summary>
        </member>
        <member name="P:Entities.viewCSMType.UpdatedBy">
            <summary>
            class variable to store key to person updating CSM type 
            </summary>
        </member>
        <member name="T:Entities.viewTestScenario">
            <summary>
            class to hold code for viewTestScenario object
            </summary>
        </member>
        <member name="M:Entities.viewTestScenario.#ctor(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            constructor for viewTestScenario object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="notes">string</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewTestScenario.ID">
            <summary>
            class variable to store test scenario ID
            </summary>
        </member>
        <member name="P:Entities.viewTestScenario.Name">
            <summary>
            class variable to store test scenario name
            </summary>
        </member>
        <member name="P:Entities.viewTestScenario.Notes">
            <summary>
            class variable to store test scenario notes
            </summary>
        </member>
        <member name="P:Entities.viewTestScenario.UpdatedBy">
            <summary>
            class variable to store key to person updating test scenario
            </summary>
        </member>
        <member name="T:Entities.viewDefectType">
            <summary>
            class to hold viewDefectType object
            </summary>
        </member>
        <member name="M:Entities.viewDefectType.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewDefectType object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewDefectType.ID">
            <summary>
            class variable to store defect type ID
            </summary>
        </member>
        <member name="P:Entities.viewDefectType.Text">
            <summary>
            class variable to store defect type text
            </summary>
        </member>
        <member name="P:Entities.viewDefectType.Active">
            <summary>
            class variable to store defect type active status
            </summary>
        </member>
        <member name="P:Entities.viewDefectType.UpdatedBy">
            <summary>
            class variable to store key to person updating defect type
            </summary>
        </member>
        <member name="T:Entities.ImageData">
            <summary>
            class to hold image info
            </summary>
        </member>
        <member name="F:Entities.ImageData.ID">
            <summary>
            class variable to store image ID
            </summary>
        </member>
        <member name="F:Entities.ImageData.FileName">
            <summary>
            class variable to store image filename
            </summary>
        </member>
        <member name="F:Entities.ImageData.FilePath">
            <summary>
            class variable to store image path
            </summary>
        </member>
        <member name="F:Entities.ImageData.Description">
            <summary>
            class variable to store image description
            </summary>
        </member>
        <member name="F:Entities.ImageData.ByteArray">
            <summary>
            class variable to store array of images
            </summary>
        </member>
        <member name="F:Entities.ImageData.UpdatedBy">
            <summary>
            class variable to store key of person that updated the image
            </summary>
        </member>
        <member name="M:Entities.ImageData.#ctor(System.Int32,System.String,System.String,System.String,System.Byte[],System.Int32)">
            <summary>
            constructor for image data object
            </summary>
            <param name="id">int</param>
            <param name="filename">string</param>
            <param name="pathName">string</param>
            <param name="description">string</param>
            <param name="byteArray">byte[]</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="M:Entities.ImageData.#ctor(System.String,System.String,System.String,System.Byte[],System.Int32)">
            <summary>
            constructor for image data object 
            </summary>
            <param name="filename">string</param>
            <param name="pathName">string</param>
            <param name="description">string</param>
            <param name="byteArray">byte[]</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="T:Entities.viewCustomerServiceMessage">
            <summary>
            class to hold code for viewCustomerServiceMessage object
            </summary>
        </member>
        <member name="M:Entities.viewCustomerServiceMessage.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            constructor for viewCustomerServiceMessage object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="statusID">int</param>
            <param name="csmTypeID">string</param>
            <param name="csmResponseTypeID">int</param>
            <param name="text">string</param>
            <param name="sectionID">int</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.ID">
            <summary>
            class variable to store customer service message ID
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.Name">
            <summary>
            class variable to store customer service message name
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.StatusID">
            <summary>
            class variable to store customer service message status ID
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.CSMTypeID">
            <summary>
            class variable to store customer service message type ID
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.CSMResponse_TypeID">
            <summary>
            class variable to store customer service message response type ID
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.Text">
            <summary>
            class variable to store customer service message text
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.Active">
            <summary>
            class variable to store customer service message active status
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.SectionID">
            <summary>
            class variable to store customer service message section ID
            </summary>
        </member>
        <member name="P:Entities.viewCustomerServiceMessage.UpdatedBy">
            <summary>
            class variable to store key to person updating customer service message 
            </summary>
        </member>
        <member name="T:Entities.viewBusinessRule">
            <summary>
            class to hold the code for the viewBusinessRule object
            </summary>
        </member>
        <member name="M:Entities.viewBusinessRule.#ctor">
            <summary>
            empty constructor for viewBusinessRule Object
            </summary>
        </member>
        <member name="M:Entities.viewBusinessRule.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewBusinessRule object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="statusID">int</param>
            <param name="sectionID">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewBusinessRule.ID">
            <summary>
            class variable to store business rule ID
            </summary>
        </member>
        <member name="P:Entities.viewBusinessRule.Name">
            <summary>
            class variable to store business rule name
            </summary>
        </member>
        <member name="P:Entities.viewBusinessRule.StatusID">
            <summary>
            class variable to store business rule status ID
            </summary>
        </member>
        <member name="P:Entities.viewBusinessRule.SectionID">
            <summary>
            class variable to store business rule section ID
            </summary>
        </member>
        <member name="P:Entities.viewBusinessRule.Text">
            <summary>
            class variable to store business rule text
            </summary>
        </member>
        <member name="P:Entities.viewBusinessRule.Active">
            <summary>
            class variable to store business rule active status
            </summary>
        </member>
        <member name="P:Entities.viewBusinessRule.UpdatedBy">
            <summary>
            class variable to store key to person updating business rule 
            </summary>
        </member>
        <member name="T:Entities.viewTestResult">
            <summary>
            class to hold code for viewTestResult
            </summary>
        </member>
        <member name="M:Entities.viewTestResult.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.String,System.Int32)">
            <summary>
            constructor for viewTestResult
            </summary>
            <param name="id">int</param>
            <param name="primaryTestCaseID">int</param>
            <param name="currentTestCaseID">int</param>
            <param name="testStepID">int</param>
            <param name="testStatusID">int</param>
            <param name="userID">int</param>
            <param name="testDate">DateTime</param>
            <param name="notes">string</param>
            <param name="failedBusinessRuleID">int</param>
        </member>
        <member name="M:Entities.viewTestResult.#ctor">
            <summary>
            empty constructor for viewTestResult
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.ID">
            <summary>
            class variable to store value of test result ID
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.PrimaryTestCaseID">
            <summary>
            class variable to store value of primaryTestCaseID
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.CurrentTestCaseID">
            <summary>
            class variable to store value of test case ID
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.TestStepID">
            <summary>
            class variable to store value of test step ID
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.TestStatusID">
            <summary>
            class variable to store value of test status ID
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.UserID">
            <summary>
            class variable to store value of user ID
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.TestDate">
            <summary>
            class variable to store value of date and time that test was run
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.Notes">
            <summary>
            class variable to store notes about test 
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.first">
            <summary>
            boolean var to indicate if object is first test step of the first test case being tested
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.last">
            <summary>
            boolean var to indicate if object is last test step of the last test case being tested
            </summary>
        </member>
        <member name="P:Entities.viewTestResult.FailedBusinessRuleID">
            <summary>
            int var to store the specific related business rule involved with test failure
            </summary>
        </member>
        <member name="T:Entities.viewDefectPriority">
            <summary>
            class to hold viewDefectPriorty info
            </summary>
        </member>
        <member name="M:Entities.viewDefectPriority.#ctor(System.Int32,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            constructor for viewDefectPriority object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
            <param name="importance">int</param>
        </member>
        <member name="P:Entities.viewDefectPriority.ID">
            <summary>
            class variable to store defect ID
            </summary>
        </member>
        <member name="P:Entities.viewDefectPriority.Text">
            <summary>
            class variable to store defect text
            </summary>
        </member>
        <member name="P:Entities.viewDefectPriority.Active">
            <summary>
            class variable to store defect active status
            </summary>
        </member>
        <member name="P:Entities.viewDefectPriority.UpdatedBy">
            <summary>
            class variable to store ID of person that updated the defect info
            </summary>
        </member>
        <member name="P:Entities.viewDefectPriority.Importance">
            <summary>
            class variable to store importance value which is used to sort
            the defects in the grid
            </summary>
        </member>
        <member name="T:Entities.viewDefect">
            <summary>
            class to hold code for viewDefect 
            </summary>
        </member>
        <member name="M:Entities.viewDefect.#ctor">
            <summary>
            empty constructor for viewDefect object
            </summary>
        </member>
        <member name="M:Entities.viewDefect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            constructor for viewDefect object with parameters
            </summary>
            <param name="id">int</param>
            <param name="defectPriorityID">int</param>
            <param name="defectStatusID">int</param>
            <param name="defectTypeID">int</param>
            <param name="ownerID">int</param>
            <param name="name">string</param>
            <param name="description">string</param>
            <param name="dateCreated">DateTime</param>
            <param name="dateCompleted">DateTime</param>
            <param name="closed">bool</param>
        </member>
        <member name="M:Entities.viewDefect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            constructor for viewDefect object with all parameters except
            for dateCompleted
            </summary>
            <param name="id">int</param>
            <param name="defectPriorityID">int</param>
            <param name="defectStatusID">int</param>
            <param name="defectTypeID">int</param>
            <param name="ownerID">int</param>
            <param name="name">string</param>
            <param name="description">string</param>
            <param name="dateCreated">DateTime</param>
            <param name="closed">bool</param>
        </member>
        <member name="P:Entities.viewDefect.ID">
            <summary>
            class variable for defect ID
            </summary>
        </member>
        <member name="P:Entities.viewDefect.DefectPriorityID">
            <summary>
            class variable for defect priority 
            </summary>
        </member>
        <member name="P:Entities.viewDefect.DefectStatusID">
            <summary>
            class variable for defect status
            </summary>
        </member>
        <member name="P:Entities.viewDefect.DefectTypeID">
            <summary>
            class variable for defect
            </summary>
        </member>
        <member name="P:Entities.viewDefect.OwnerID">
            <summary>
            class variable for defect owner ID
            </summary>
        </member>
        <member name="P:Entities.viewDefect.Name">
            <summary>
            class variable for defect name
            </summary>
        </member>
        <member name="P:Entities.viewDefect.Description">
            <summary>
            class variable for defect description
            </summary>
        </member>
        <member name="P:Entities.viewDefect.DateCreated">
            <summary>
            class variable for date that defect was created
            </summary>
        </member>
        <member name="P:Entities.viewDefect.DateCompleted">
            <summary>
            class variable for date that defect was completed
            </summary>
        </member>
        <member name="P:Entities.viewDefect.Closed">
            <summary>
            class variable to indicate whether defect is open or closed
            </summary>
        </member>
        <member name="T:Entities.TestRunnerTestStep">
            <summary>
            classtoholdcode for TestRunnerTestStep object
            </summary>
        </member>
        <member name="M:Entities.TestRunnerTestStep.#ctor">
            <summary>
            empty constructor for TestRunnerTestStep
            </summary>
        </member>
        <member name="P:Entities.TestRunnerTestStep.currentTestStep">
            <summary>
            class variable to store value of currentTestStep 
            </summary>
        </member>
        <member name="P:Entities.TestRunnerTestStep.primaryTestCaseID">
            <summary>
            class variable to store value of primaryTestCaseID
            </summary>
        </member>
        <member name="P:Entities.TestRunnerTestStep.currentTestCaseID">
            <summary>
            class variable to store value of currentTestCaseID
            </summary>
        </member>
        <member name="P:Entities.TestRunnerTestStep.first">
            <summary>
            boolean var to indicate if object is first test step of the first test case being tested
            </summary>
        </member>
        <member name="P:Entities.TestRunnerTestStep.last">
            <summary>
            boolean var to indicate if object is last test step of the last test case being tested
            </summary>
        </member>
        <member name="T:Entities.viewSection">
            <summary>
            class to hold code for viewSection object
            </summary>
        </member>
        <member name="M:Entities.viewSection.#ctor(System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewSection object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="abbreviation">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewSection.ID">
            <summary>
            class variable to store section ID
            </summary>
        </member>
        <member name="P:Entities.viewSection.Text">
            <summary>
            class variable to store section name
            </summary>
        </member>
        <member name="P:Entities.viewSection.Abbreviation">
            <summary>
            class variable to store section abbreviation
            </summary>
        </member>
        <member name="P:Entities.viewSection.Active">
            <summary>
            class variable to store section active status
            </summary>
        </member>
        <member name="P:Entities.viewSection.UpdatedBy">
            <summary>
            class variable to store userID as UpdatedBy
            </summary>
        </member>
        <member name="T:Entities.viewError">
            <summary>
            class to hold code for viewError
            </summary>
        </member>
        <member name="M:Entities.viewError.#ctor(System.Int32,System.DateTime,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            constructor for viewError
            </summary>
            <param name="id"></param>
            <param name="date"></param>
            <param name="source"></param>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="stackTrace"></param>
            <param name="projectID"></param>
            <param name="userID"></param>
        </member>
        <member name="P:Entities.viewError.ID">
            <summary>
            class variable for error ID
            </summary>
        </member>
        <member name="P:Entities.viewError.Date">
            <summary>
            class variable for error date
            </summary>
        </member>
        <member name="P:Entities.viewError.DisplayDate">
            <summary>
            string version of Date property for display on client
            </summary>
        </member>
        <member name="P:Entities.viewError.Message">
            <summary>
            class variable for error message
            </summary>
        </member>
        <member name="P:Entities.viewError.Source">
            <summary>
            class variable for error source
            </summary>
        </member>
        <member name="P:Entities.viewError.InnerException">
            <summary>
            class variable for error inner exception
            </summary>
        </member>
        <member name="P:Entities.viewError.StackTrace">
            <summary>
            class variable for error stack trace
            </summary>
        </member>
        <member name="P:Entities.viewError.ProjectID">
            <summary>
            class variable for project ID that contained the error
            </summary>
        </member>
        <member name="P:Entities.viewError.UserID">
            <summary>
            class variable for user ID associated with error
            </summary>
        </member>
        <member name="T:Entities.viewDocument">
            <summary>
            class to hold code for viewDocument object
            </summary>
        </member>
        <member name="F:Entities.viewDocument.ChapterList">
            <summary>
            class variable to store list of documents
            </summary>
        </member>
        <member name="M:Entities.viewDocument.#ctor(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor with five parameters
            </summary>
            <param name="id">int</param>
            <param name="documentTypeID">int</param>
            <param name="name">string</param>
            <param name="description">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="M:Entities.viewDocument.#ctor(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Collections.Generic.List{Entities.viewChapter},System.Int32)">
            <summary>
            constructor for viewDocument object
            </summary>
            <param name="id">int</param>
            <param name="documentTypeID">int</param>
            <param name="name">string</param>
            <param name="description">string</param>
            <param name="active">bool</param>
            <param name="chapterList">List</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="M:Entities.viewDocument.getDocumentHTML">
            <summary>
            fetch all document text
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Entities.viewDocument.addChapter(Entities.viewChapter)">
            <summary>
            add a chapter
            </summary>
            <param name="chapter">viewChapter</param>
        </member>
        <member name="M:Entities.viewDocument.removeChapter(System.Int32)">
            <summary>
            remove a chapter
            </summary>
            <param name="chapterID">int</param>
        </member>
        <member name="M:Entities.viewDocument.removeChapter(Entities.viewChapter)">
            <summary>
            remove a chapter
            </summary>
            <param name="chapter">viewChapter</param>
        </member>
        <member name="M:Entities.viewDocument.getChapters">
            <summary>
            fetch a chapter
            </summary>
            <returns>List&lt;viewChapter&gt;</returns>
        </member>
        <member name="M:Entities.viewDocument.setChapters(System.Collections.Generic.List{Entities.viewChapter})">
            <summary>
            set chapters
            </summary>
            <param name="chapList">List&lt;viewChapter&gt;</param>
        </member>
        <member name="P:Entities.viewDocument.ID">
            <summary>
            class variable to store document ID
            </summary>
        </member>
        <member name="P:Entities.viewDocument.DocumentTypeID">
            <summary>
            class variable to store document type ID
            </summary>
        </member>
        <member name="P:Entities.viewDocument.Name">
            <summary>
            class variable to store document name
            </summary>
        </member>
        <member name="P:Entities.viewDocument.Description">
            <summary>
            class variable to store document description
            </summary>
        </member>
        <member name="P:Entities.viewDocument.Active">
            <summary>
            class variable to store document active status
            </summary>
        </member>
        <member name="P:Entities.viewDocument.UpdatedBy">
            <summary>
            class variable to store key to person updating document
            </summary>
        </member>
        <member name="T:Entities.EditDocumentDetails">
            <summary>
            Data object to transport docuemnt detail information to client javascript
            </summary>
        </member>
        <member name="M:Entities.EditDocumentDetails.#ctor">
            <summary>
            empty constructor for EditDocumentDetails
            </summary>
        </member>
        <member name="P:Entities.EditDocumentDetails.id">
            <summary>
            class variable to store value of document ID
            </summary>
        </member>
        <member name="P:Entities.EditDocumentDetails.title">
            <summary>
            class variable to store value of document title
            </summary>
        </member>
        <member name="P:Entities.EditDocumentDetails.type">
            <summary>
            class variable to store value of document type
            </summary>
        </member>
        <member name="P:Entities.EditDocumentDetails.typeID">
            <summary>
            class variable to store value of document type ID
            </summary>
        </member>
        <member name="P:Entities.EditDocumentDetails.desc">
            <summary>
            class variable to store value of document description
            </summary>
        </member>
        <member name="T:Entities.DocumentSearchResult">
            <summary>
            class to hold code for DocumentSearchResult
            </summary>
        </member>
        <member name="M:Entities.DocumentSearchResult.#ctor">
            <summary>
            empty constructor for DocumentSearchResult
            </summary>
        </member>
        <member name="M:Entities.DocumentSearchResult.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            constructor for DocumentSearchResult with two parameters
            </summary>
            <param name="did">List&lt;string&gt;</param>
            <param name="cid">List&lt;string&gt;</param>
        </member>
        <member name="P:Entities.DocumentSearchResult.docID">
            <summary>
            class variable to store list of document IDs
            </summary>
        </member>
        <member name="P:Entities.DocumentSearchResult.chapID">
            <summary>
            class variable to store list of chapter IDs
            </summary>
        </member>
        <member name="T:Entities.viewDefectStatus">
            <summary>
            class to hold viewDefectStatus info
            </summary>
        </member>
        <member name="M:Entities.viewDefectStatus.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewDefectStatus
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewDefectStatus.ID">
            <summary>
            class variable to store defect ID
            </summary>
        </member>
        <member name="P:Entities.viewDefectStatus.Text">
            <summary>
            class variable to store defect text
            </summary>
        </member>
        <member name="P:Entities.viewDefectStatus.Active">
            <summary>
            class variable to store defect active status
            </summary>
        </member>
        <member name="P:Entities.viewDefectStatus.UpdatedBy">
            <summary>
            class variable to store key to person updating defect
            </summary>
        </member>
        <member name="T:Entities.NavigationMenuItem">
            <summary>
            class that defines a NavigationMenuItem which is used
            to transport data for each menu item in the main navigation
            tree(JSTree)
            </summary>
        </member>
        <member name="M:Entities.NavigationMenuItem.#ctor(System.Int32,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            class variable to store value of navigation menu item object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="url">string</param>
            <param name="parentID">int</param>
            <param name="nodeID">string</param>
            /// <param name="featureID">int</param>
        </member>
        <member name="P:Entities.NavigationMenuItem.ID">
            <summary>
            class variable to store value of navigation menu item ID
            </summary>
        </member>
        <member name="P:Entities.NavigationMenuItem.Name">
            <summary>
            class variable to store value of navigation menu item name
            </summary>
        </member>
        <member name="P:Entities.NavigationMenuItem.URL">
            <summary>
            class variable to store value of navigation menu item URL
            </summary>
        </member>
        <member name="P:Entities.NavigationMenuItem.ParentID">
            <summary>
            class variable to store value of navigation menu item parent ID
            </summary>
        </member>
        <member name="P:Entities.NavigationMenuItem.NodeID">
            <summary>
            class variable to store value of navigation menu item node ID
            </summary>
        </member>
        <member name="P:Entities.NavigationMenuItem.FeatureID">
            <summary>
            class variable to store value of menu item feature ID
            </summary>
        </member>
        <member name="T:Entities.viewUser">
            <summary>
            class that defines a viewUser object which is used to transport user data
            </summary>
        </member>
        <member name="M:Entities.viewUser.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Int32)">
            <summary>
            constructor for viewUser object
            </summary>
            <param name="id">int</param>
            <param name="userRoleID">int</param>
            <param name="firstName">string</param>
            <param name="lastName">string</param>
            <param name="middleInitial">string</param>
            <param name="email">string</param>
            <param name="pw">string</param>
            <param name="active">bool</param>
            <param name="roleName">string</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="M:Entities.viewUser.getFullNameLNF">
            <summary>
            return formatted name, last name first
            ex: Doe, John A.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Entities.viewUser.getFullNameFNF">
            <summary>
            returns formated name, first name first
            ex: John A. Doe
            </summary>
            <returns>string</returns>
        </member>
        <member name="P:Entities.viewUser.ID">
            <summary>
            class variable to store user ID
            </summary>
        </member>
        <member name="P:Entities.viewUser.UserRoleID">
            <summary>
            class variable to store user role ID
            </summary>
        </member>
        <member name="P:Entities.viewUser.FirstName">
            <summary>
            class variable to store user first name
            </summary>
        </member>
        <member name="P:Entities.viewUser.LastName">
            <summary>
            class variable to store user last name
            </summary>
        </member>
        <member name="P:Entities.viewUser.MiddleInitial">
            <summary>
            class variable to store user middle initial
            </summary>
        </member>
        <member name="P:Entities.viewUser.Email">
            <summary>
            class variable to store user email address
            </summary>
        </member>
        <member name="P:Entities.viewUser.PW">
            <summary>
            class variable to store user password
            </summary>
        </member>
        <member name="P:Entities.viewUser.Active">
            <summary>
            class variable to store user active status
            </summary>
        </member>
        <member name="P:Entities.viewUser.RoleName">
            <summary>
            class variable to store user role name
            </summary>
        </member>
        <member name="P:Entities.viewUser.UpdatedBy">
            <summary>
            class variable to store UpdatedBy user id
            </summary>
        </member>
        <member name="T:Entities.SearchEntities">
            <summary>
            class to hold code for AdvancedSearch
            </summary>
        </member>
        <member name="F:Entities.SearchEntities.searchList">
            <summary>
            class variable to store list of search row data
            </summary>
        </member>
        <member name="F:Entities.SearchEntities.resultList">
            <summary>
            class variable to store list of advanced search results
            </summary>
        </member>
        <member name="M:Entities.SearchEntities.#ctor">
            <summary>
            constructor for advanced search
            </summary>
        </member>
        <member name="M:Entities.SearchEntities.addSearchRow(Entities.SearchRow)">
            <summary>
            add a search row
            </summary>
            <param name="sr">SearchRow</param>
        </member>
        <member name="T:Entities.BasicSearchResult">
            <summary>
            transport object for holding results of basic search
            </summary>
        </member>
        <member name="M:Entities.BasicSearchResult.#ctor(System.Int32,System.Int32)">
            <summary>
            constructor for BasicSearchResult
            </summary>
            <param name="id">int</param>
            <param name="displayPriority">int</param>
        </member>
        <member name="M:Entities.BasicSearchResult.CompareTo(Entities.BasicSearchResult)">
            <summary>
            compares display search items
            </summary>
            <param name="other">BasicSearchResult</param>
            <returns>Int32</returns>
        </member>
        <member name="P:Entities.BasicSearchResult.ID">
            <summary>
            class variable to store value of display search item ID
            </summary>
        </member>
        <member name="P:Entities.BasicSearchResult.DisplayPriority">
            <summary>
            class variable to store value of display priority
            </summary>
        </member>
        <member name="T:Entities.AdvancedSearchResult">
            <summary>
            transport object for holding result of advanced search
            </summary>
        </member>
        <member name="M:Entities.AdvancedSearchResult.#ctor">
            <summary>
            empty constructor for AdvancedSearchResult
            </summary>
        </member>
        <member name="M:Entities.AdvancedSearchResult.#ctor(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            constructor for AdvancedSearchResult with two parameters
            </summary>
            <param name="rowIndex">int</param>
            <param name="resultList">List&lt;int&gt;</param>
        </member>
        <member name="P:Entities.AdvancedSearchResult.RowIndex">
            <summary>
            class variable to store value of row index
            </summary>
        </member>
        <member name="P:Entities.AdvancedSearchResult.ResultList">
            <summary>
            class variable to store list of search results
            </summary>
        </member>
        <member name="T:Entities.SearchRow">
            <summary>
            class to hold code for SearchRow
            </summary>
        </member>
        <member name="M:Entities.SearchRow.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            constructor for SearchRow
            </summary>
            <param name="searchObjectID">string</param>
            <param name="op">string</param>
            <param name="value">string</param>
            <param name="connector">string</param>
        </member>
        <member name="P:Entities.SearchRow.SearchObjectID">
            <summary>
            class variable to store search object
            </summary>
        </member>
        <member name="P:Entities.SearchRow.Operator">
            <summary>
            class variable to store operator
            </summary>
        </member>
        <member name="P:Entities.SearchRow.Value">
            <summary>
            class variable to store search value
            </summary>
        </member>
        <member name="P:Entities.SearchRow.Connector">
            <summary>
            class variable to store connector
            </summary>
        </member>
        <member name="T:Entities.SearchObject">
            <summary>
            class to hold code for SearchObject
            </summary>
        </member>
        <member name="M:Entities.SearchObject.#ctor(System.String,System.String)">
            <summary>
            constructor for SearchObject
            </summary>
            <param name="name">string</param>
            <param name="value">string</param>
        </member>
        <member name="P:Entities.SearchObject.Name">
            <summary>
            class variable to store search object name
            </summary>
        </member>
        <member name="P:Entities.SearchObject.Value">
            <summary>
            class variable to store search object value
            </summary>
        </member>
        <member name="T:Entities.DDLValueItem">
            <summary>
            transport object to hold list items in advanced search ui
            </summary>
        </member>
        <member name="M:Entities.DDLValueItem.#ctor">
            <summary>
            empty constructor for DDLValueItem 
            </summary>
        </member>
        <member name="M:Entities.DDLValueItem.#ctor(System.Int32,System.String)">
            <summary>
            constructor for DDLValueItem with two parameters
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
        </member>
        <member name="P:Entities.DDLValueItem.ID">
            <summary>
            class variable to store ID of DDL item
            </summary>
        </member>
        <member name="P:Entities.DDLValueItem.TEXT">
            <summary>
            class variable to store text of DDL item
            </summary>
        </member>
        <member name="T:Entities.ClientSearchData">
            <summary>
            class to hold code for ClientSearchData
            </summary>
        </member>
        <member name="M:Entities.ClientSearchData.#ctor">
            <summary>
            empty constructor for ClientSearchData
            </summary>
        </member>
        <member name="P:Entities.ClientSearchData.objectID">
            <summary>
            class variable to store value of object ID
            </summary>
        </member>
        <member name="P:Entities.ClientSearchData.operatorID">
            <summary>
            class variable to store value of operator ID
            </summary>
        </member>
        <member name="P:Entities.ClientSearchData.textValue">
            <summary>
            class variable to store value of text 
            </summary>
        </member>
        <member name="P:Entities.ClientSearchData.calendarValue">
            <summary>
            class variable to store value of calendar
            </summary>
        </member>
        <member name="P:Entities.ClientSearchData.ddlValue">
            <summary>
            class variable to store value of the drop down list
            </summary>
        </member>
        <member name="P:Entities.ClientSearchData.connector">
            <summary>
            class variable to store value of connector
            </summary>
        </member>
        <member name="T:Entities.Helper">
            <summary>
            class to hold code for Helper
            </summary>
        </member>
        <member name="M:Entities.Helper.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            UNFINISHED
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="T:Entities.viewTestCase">
            <summary>
            class to hold code for viewTestCase object
            </summary>
        </member>
        <member name="M:Entities.viewTestCase.#ctor(System.Int32,System.String,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            constructor for viewTestCase object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="sectionID">int</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
            <param name="testStatusID">int</param>
        </member>
        <member name="P:Entities.viewTestCase.ID">
            <summary>
            class variable to store test case ID
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.Name">
            <summary>
            class variable to store test case name
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.SectionID">
            <summary>
            class variable to store test case section ID
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.UpdatedBy">
            <summary>
            class variable to store key to person updating test case
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.Active">
            <summary>
            class variable to store test case active status
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.PreConditionIDs">
            <summary>
            class variable to store list of precondition IDs
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.TestStatusID">
            <summary>
            ckass variable to store test status id
            </summary>
        </member>
        <member name="P:Entities.viewTestCase.associatedRules">
            <summary>
            class variable to store all business rules associated with all test steps in test case
            </summary>
        </member>
        <member name="T:Entities.TestCaseSearchResult">
            <summary>
            class to hold code for TestCaseSearchResult
            </summary>
        </member>
        <member name="M:Entities.TestCaseSearchResult.#ctor">
            <summary>
            empty constructor for TestCaseSearchResult
            </summary>
        </member>
        <member name="M:Entities.TestCaseSearchResult.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            constructor for TestCaseSearchResult with two parameters
            </summary>
            <param name="tcid">List&lt;string&gt;</param>
            <param name="tsid">List&lt;string&gt;</param>
        </member>
        <member name="P:Entities.TestCaseSearchResult.tcID">
            <summary>
            class variable to store a list of test case IDs
            </summary>
        </member>
        <member name="P:Entities.TestCaseSearchResult.tsID">
            <summary>
            class variable to store a list of test step IDs
            </summary>
        </member>
        <member name="T:Entities.viewTestStep">
            <summary>
            class to hold code for viewTestStep object
            </summary>
        </member>
        <member name="M:Entities.viewTestStep.#ctor(System.Int32,System.String,System.Int32,System.Collections.Generic.List{Entities.viewBusinessRule},System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewTestStep object
            </summary>
            <param name="id">int</param>
            <param name="seqnum">int</param>
            <param name="name">string</param>
            <param name="relatedBusinessRules">string</param>
            <param name="notes">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="M:Entities.viewTestStep.#ctor(System.Int32,System.String,System.Collections.Generic.List{Entities.viewBusinessRule},System.String,System.Int32)">
            <summary>
            constructor for viewTestStep object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="relatedBusinessRules">List&lt;viewBusinessRule&gt;</param>
            <param name="notes"></param>
            <param name=" updatedBy">int</param>
        </member>
        <member name="M:Entities.viewTestStep.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewTestStep object
            </summary>
            <param name="id">int</param>
            <param name="name">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="M:Entities.viewTestStep.#ctor">
            <summary>
            empty constructor for viewTestStep object
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.ID">
            <summary>
            class variable to store test step ID
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.SeqNum">
            <summary>
            class variable to store test step sequence number
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.Name">
            <summary>
            class variable to store test step name
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.RelatedBusinessRules">
            <summary>
            class variable to store list of business rules related to the test step 
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.Notes">
            <summary>
            class variable to store test step notes
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.Active">
            <summary>
            class variable to store test step active status
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.UpdatedBy">
            <summary>
            class variable to store key to person updating test step 
            </summary>
        </member>
        <member name="P:Entities.viewTestStep.ParentTestCaseID">
            <summary>
            class variable to store parent test case ID
            </summary>
        </member>
        <member name="T:Entities.viewStatus">
            <summary>
            class to hold the code for the viewStatus object
            </summary>
        </member>
        <member name="M:Entities.viewStatus.#ctor(System.Int32,System.String,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewStatus object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="color">string</param>
            <param name="displayInChapterSummary">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewStatus.ID">
            <summary>
            class variable to store status ID
            </summary>
        </member>
        <member name="P:Entities.viewStatus.Text">
            <summary>
            class variable to store status text
            </summary>
        </member>
        <member name="P:Entities.viewStatus.Active">
            <summary>
            class variable to store status active status
            </summary>
        </member>
        <member name="P:Entities.viewStatus.Color">
            <summary>
            class variable to store status color
            </summary>
        </member>
        <member name="P:Entities.viewStatus.DisplayInChapterSummary">
            <summary>
            class variable to store status DisplayInChapterSummary
            </summary>
        </member>
        <member name="P:Entities.viewStatus.UpdatedBy">
            <summary>
            class variable to store UserID as UpdatedBy
            </summary>
        </member>
        <member name="T:Entities.viewChapter">
            <summary>
            class to hold viewchapter object
            </summary>
        </member>
        <member name="M:Entities.viewChapter.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            constructor for viewChapter object
            </summary>
            <param name="id">int</param>
            <param name="title">string</param>
            <param name="text">string</param>
            <param name="typeID">int</param>
            <param name="updatedBy">int</param>
            <param name="active">bool</param>
            <param name="seqNum">int</param>
        </member>
        <member name="M:Entities.viewChapter.#ctor">
            <summary>
            empty constructor
            </summary>
        </member>
        <member name="P:Entities.viewChapter.ID">
            <summary>
            class variable to store chapter ID
            </summary>
        </member>
        <member name="P:Entities.viewChapter.Title">
            <summary>
            class variable to store chapter title
            </summary>
        </member>
        <member name="P:Entities.viewChapter.Text">
            <summary>
            class variable to store chapter text
            </summary>
        </member>
        <member name="P:Entities.viewChapter.TypeID">
            <summary>
            class variable to store chapter type ID
            </summary>
        </member>
        <member name="P:Entities.viewChapter.SeqNum">
            <summary>
            class variable to store chapter sequence number
            </summary>
        </member>
        <member name="P:Entities.viewChapter.Active">
            <summary>
            class variable to store chapter active status
            </summary>
        </member>
        <member name="P:Entities.viewChapter.UpdatedBy">
            <summary>
            class variable to store key to person updating chapter
            </summary>
        </member>
        <member name="T:Entities.Report">
            <summary>
            Report class used to transfer report data to pdf builder
            </summary>
        </member>
        <member name="P:Entities.Report.Title">
            <summary>
            report title
            </summary>
        </member>
        <member name="P:Entities.Report.Content">
            <summary>
            report content
            </summary>
        </member>
        <member name="T:Entities.Report.ReportType">
            <summary>
            constructor for chapter type enums
            </summary>
        </member>
        <member name="T:Entities.viewRole">
            <summary>
            class to hold code for viewRole object
            </summary>
        </member>
        <member name="M:Entities.viewRole.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewRole object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewRole.ID">
            <summary>
            class variable to store role ID
            </summary>
        </member>
        <member name="P:Entities.viewRole.Text">
            <summary>
            class variable to store role text
            </summary>
        </member>
        <member name="P:Entities.viewRole.Active">
            <summary>
            class variable to store role active status
            </summary>
        </member>
        <member name="P:Entities.viewRole.UpdatedBy">
            <summary>
            class variable to store UpdatedBy user id
            </summary>
        </member>
        <member name="T:Entities.viewDocumentType">
            <summary>
            class to hold code for viewDocumentType
            </summary>
        </member>
        <member name="M:Entities.viewDocumentType.#ctor(System.Int32,System.String,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            constructor for viewDocumentType object
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="includeBRCSMChapterSummary">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewDocumentType.ID">
            <summary>
            class variable to store document type ID
            </summary>
        </member>
        <member name="P:Entities.viewDocumentType.Text">
            <summary>
            class variable to store document type name
            </summary>
        </member>
        <member name="P:Entities.viewDocumentType.Active">
            <summary>
            class variable to store document type active status
            </summary>
        </member>
        <member name="P:Entities.viewDocumentType.IncludeBRCSMChapterSummary">
            <summary>
            class variable to store status of IncludeBRCSMChapterSummary
            </summary>
        </member>
        <member name="P:Entities.viewDocumentType.UpdatedBy">
            <summary>
            class variable to store key to person updating document type
            </summary>
        </member>
        <member name="T:Entities.viewComment">
            <summary>
            class to hold code for viewComment
            </summary>
        </member>
        <member name="M:Entities.viewComment.#ctor(System.Int32,System.Int32,System.Int32,System.DateTime,System.String)">
            <summary>
            constructor for viewComment
            </summary>
            <param name="id">int</param>
            <param name="defectID">int</param>
            <param name="userID">int</param>
            <param name="dateCreated">DateTime</param>
            <param name="text">string</param>
        </member>
        <member name="P:Entities.viewComment.ID">
            <summary>
            class variable to store value of comment ID
            </summary>
        </member>
        <member name="P:Entities.viewComment.DefectID">
            <summary>
            class variable to store value of Defect ID
            </summary>
        </member>
        <member name="P:Entities.viewComment.UserID">
            <summary>
            class variable to store value of user ID
            </summary>
        </member>
        <member name="P:Entities.viewComment.DateCreated">
            <summary>
            class variable to store date that comment was created
            </summary>
        </member>
        <member name="P:Entities.viewComment.Text">
            <summary>
            class variable to store value of comment text
            </summary>
        </member>
        <member name="T:Entities.JSTree_Node">
            <summary>
            class to hold code for JSTree_Node object
            </summary>
        </member>
        <member name="F:Entities.JSTree_Node.children">
            <summary>
            class variable to store array of JSTree_Node children
            </summary>
        </member>
        <member name="F:Entities.JSTree_Node.attr">
            <summary>
            class variable to store JSTree_Node attr
            </summary>
        </member>
        <member name="P:Entities.JSTree_Node.data">
            <summary>
            class variable to store JSTree_Node data
            </summary>
        </member>
        <member name="P:Entities.JSTree_Node.IdServerUse">
            <summary>
            class variable to store JSTree_Node IdServerUse
            </summary>
        </member>
        <member name="P:Entities.JSTree_Node.state">
            <summary>
            class variable to store JSTree_Node state
            </summary>
        </member>
        <member name="T:Entities.JsTreeNodeData">
            <summary>
            class to hold code for JsTreeNodeData
            </summary>
        </member>
        <member name="F:Entities.JsTreeNodeData.title">
            <summary>
            class variable to store title
            </summary>
        </member>
        <member name="F:Entities.JsTreeNodeData.icon">
            <summary>
            class variable to store icon
            </summary>
        </member>
        <member name="T:Entities.JsTreeAttribute">
            <summary>
            class to hold JsTreeAttributes object
            </summary>
        </member>
        <member name="F:Entities.JsTreeAttribute.id">
            <summary>
            class variable to store JsTreeAttribute ID
            </summary>
        </member>
        <member name="F:Entities.JsTreeAttribute.type">
            <summary>
            class variable to store JsTreeAttribute type
            </summary>
        </member>
        <member name="F:Entities.JsTreeAttribute.selected">
            <summary>
            class variable to store JsTreeAttribute selected status
            </summary>
        </member>
        <member name="F:Entities.JsTreeAttribute.rel">
            <summary>
            class variable to store rel
            </summary>
        </member>
        <member name="T:Entities.viewFeature">
            <summary>
            class to hold code for viewFeature object
            </summary>
        </member>
        <member name="M:Entities.viewFeature.#ctor(System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            constructor for viewFeature object with three parameters
            </summary>
            <param name="id">int</param>
            <param name="text">string</param>
            <param name="active">bool</param>
            <param name="updatedBy">int</param>
        </member>
        <member name="P:Entities.viewFeature.ID">
            <summary>
            class variable to store feature ID
            </summary>
        </member>
        <member name="P:Entities.viewFeature.Text">
            <summary>
            class variable to store feature text
            </summary>
        </member>
        <member name="P:Entities.viewFeature.Active">
            <summary>
            class variable to store feature active status
            </summary>
        </member>
        <member name="P:Entities.viewFeature.UpdatedBy">
            <summary>
            class variable to store UserID as UpdatedBy
            </summary>
        </member>
    </members>
</doc>
